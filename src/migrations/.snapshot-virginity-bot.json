{
  "namespaces": [
    "public"
  ],
  "name": "public",
  "tables": [
    {
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "default": "uuid_generate_v4()",
          "mappedType": "uuid"
        },
        "deleted_at": {
          "name": "deleted_at",
          "type": "timestamptz(0)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "default": "now()",
          "mappedType": "datetime"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamptz(0)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "default": "now()",
          "mappedType": "datetime"
        },
        "table_name": {
          "name": "table_name",
          "type": "text",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "mappedType": "text"
        },
        "object_id": {
          "name": "object_id",
          "type": "text",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "mappedType": "text"
        },
        "data": {
          "name": "data",
          "type": "jsonb",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "mappedType": "json"
        }
      },
      "name": "deleted_record",
      "schema": "public",
      "indexes": [
        {
          "keyName": "deleted_record_pkey",
          "columnNames": [
            "id"
          ],
          "composite": false,
          "primary": true,
          "unique": true
        }
      ],
      "checks": [],
      "foreignKeys": {}
    },
    {
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "comment": "Discord guild's snowflake identifier",
          "mappedType": "text"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamptz(0)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "default": "now()",
          "mappedType": "datetime"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamptz(0)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "default": "now()",
          "mappedType": "datetime"
        },
        "name": {
          "name": "name",
          "type": "text",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "comment": "Name of the Discord guild",
          "mappedType": "text"
        },
        "biggest_virgin_role_id": {
          "name": "biggest_virgin_role_id",
          "type": "text",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "comment": "ID of the biggest virgin role",
          "mappedType": "text"
        },
        "bot_channel_id": {
          "name": "bot_channel_id",
          "type": "text",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "comment": "ID of the virginity-bot channel",
          "mappedType": "text"
        },
        "last_reset": {
          "name": "last_reset",
          "type": "timestamptz(0)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "default": "now()",
          "comment": "Timestamp when the last reset ocurred",
          "mappedType": "datetime"
        },
        "score_multiplier_screen": {
          "name": "score_multiplier_screen",
          "type": "double precision",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "default": "1.5",
          "comment": "The score multiplier applied when sharing your screen in VC. This stacks with other multipliers if `score_multipliers_stack` is enabled.",
          "mappedType": "double"
        },
        "score_multipliers_stack": {
          "name": "score_multipliers_stack",
          "type": "boolean",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "default": "true",
          "comment": "Whether or not score multipliers should stack, or use the highest value.",
          "mappedType": "boolean"
        },
        "score_multiplier_camera": {
          "name": "score_multiplier_camera",
          "type": "double precision",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "default": "1.5",
          "comment": "The score multiplier applied when sharing your camera in VC. This stacks with other multipliers if `score_multipliers_stack` is enabled.",
          "mappedType": "double"
        },
        "score_reset_schedule": {
          "name": "score_reset_schedule",
          "type": "text",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "default": "'0 2 * * Tue'",
          "comment": "When to reset a guild's scores. Uses CRON-style denotation. If null, scores will never reset.",
          "mappedType": "text"
        },
        "score_multiplier_gaming": {
          "name": "score_multiplier_gaming",
          "type": "double precision",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "default": "1.5",
          "comment": "The score multiplier applied when gaming while in VC. This stacks with other multipliers if `score_multipliers_stack` is enabled.",
          "mappedType": "double"
        },
        "role_name": {
          "name": "role_name",
          "type": "text",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "default": "'Chonkiest Virgin the World Has Ever Seen'",
          "comment": "The name of the chonkiest virgin's role in Discord.",
          "mappedType": "text"
        },
        "role_color": {
          "name": "role_color",
          "type": "text",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "default": "'#DA8C80'",
          "comment": "The color of the chonkiest virgin's role in Discord.",
          "mappedType": "text"
        },
        "role_emoji": {
          "name": "role_emoji",
          "type": "text",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "default": "'ðŸ‘‘'",
          "comment": "An emoji to adorn the chonkiest virgin's emoji in Discord.",
          "mappedType": "text"
        },
        "channel_name": {
          "name": "channel_name",
          "type": "text",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "default": "'virginity-bot'",
          "comment": "The name of the virginity bot text channel in Discord.",
          "mappedType": "text"
        },
        "channel_description": {
          "name": "channel_description",
          "type": "text",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "default": "'Compete with other virgins to claim the honor of being the biggest virgin.'",
          "comment": "The description of the virginity bot text channel in Discord.",
          "mappedType": "text"
        }
      },
      "name": "guild",
      "schema": "public",
      "indexes": [
        {
          "columnNames": [
            "id"
          ],
          "composite": false,
          "keyName": "guild_id_index",
          "primary": false,
          "unique": false
        },
        {
          "columnNames": [
            "created_at"
          ],
          "composite": false,
          "keyName": "guild_created_at_index",
          "primary": false,
          "unique": false
        },
        {
          "columnNames": [
            "updated_at"
          ],
          "composite": false,
          "keyName": "guild_updated_at_index",
          "primary": false,
          "unique": false
        },
        {
          "keyName": "guild_pkey",
          "columnNames": [
            "id"
          ],
          "composite": false,
          "primary": true,
          "unique": true
        }
      ],
      "checks": [],
      "foreignKeys": {}
    },
    {
      "columns": {
        "hash": {
          "name": "hash",
          "type": "text",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "comment": "The hash of uploaded audio file. Uses SHA-256.",
          "mappedType": "text"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamptz(0)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "default": "now()",
          "mappedType": "datetime"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamptz(0)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "default": "now()",
          "mappedType": "datetime"
        },
        "name": {
          "name": "name",
          "type": "text",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "comment": "The name of the intro song.",
          "mappedType": "text"
        },
        "mime_type": {
          "name": "mime_type",
          "type": "text",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "comment": "The MIME type of the file.",
          "mappedType": "text"
        },
        "duration": {
          "name": "duration",
          "type": "interval",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "comment": "The duration of the intro song."
        },
        "computed_timeout": {
          "name": "computed_timeout",
          "type": "interval",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "comment": "The length of time before next play."
        },
        "uri": {
          "name": "uri",
          "type": "text",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "comment": "Reference to an audio file. Supports s3:// and vbot-builtin:// schemas.",
          "mappedType": "text"
        }
      },
      "name": "intro_song",
      "schema": "public",
      "indexes": [
        {
          "columnNames": [
            "created_at"
          ],
          "composite": false,
          "keyName": "intro_song_created_at_index",
          "primary": false,
          "unique": false
        },
        {
          "columnNames": [
            "updated_at"
          ],
          "composite": false,
          "keyName": "intro_song_updated_at_index",
          "primary": false,
          "unique": false
        },
        {
          "keyName": "intro_song_pkey",
          "columnNames": [
            "hash"
          ],
          "composite": false,
          "primary": true,
          "unique": true
        }
      ],
      "checks": [],
      "foreignKeys": {}
    },
    {
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "mappedType": "text"
        },
        "guild_snowflake": {
          "name": "guild_snowflake",
          "type": "text",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "mappedType": "text"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamptz(0)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "default": "now()",
          "mappedType": "datetime"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamptz(0)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "default": "now()",
          "mappedType": "datetime"
        },
        "username": {
          "name": "username",
          "type": "text",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "comment": "User's Discord username",
          "mappedType": "text"
        },
        "discriminator": {
          "name": "discriminator",
          "type": "text",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "comment": "User's Discord discriminator",
          "mappedType": "text"
        },
        "nickname": {
          "name": "nickname",
          "type": "text",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "comment": "User's Discord guild-specific nickname",
          "mappedType": "text"
        },
        "cached_dur_in_vc": {
          "name": "cached_dur_in_vc",
          "type": "int",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "default": "0",
          "comment": "The cached total duration the user has spent in VC. Keep in mind this can be out of date!",
          "mappedType": "integer"
        },
        "intro_song_hash": {
          "name": "intro_song_hash",
          "type": "text",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "mappedType": "text"
        },
        "intro_last_played": {
          "name": "intro_last_played",
          "type": "timestamptz(0)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 6,
          "comment": "A timestamp for the last time an intro song was played for this user.",
          "mappedType": "datetime"
        },
        "title_when_leader": {
          "name": "title_when_leader",
          "type": "text",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "mappedType": "text"
        }
      },
      "name": "virgin",
      "schema": "public",
      "indexes": [
        {
          "columnNames": [
            "id"
          ],
          "composite": false,
          "keyName": "virgin_id_index",
          "primary": false,
          "unique": false
        },
        {
          "columnNames": [
            "created_at"
          ],
          "composite": false,
          "keyName": "virgin_created_at_index",
          "primary": false,
          "unique": false
        },
        {
          "columnNames": [
            "updated_at"
          ],
          "composite": false,
          "keyName": "virgin_updated_at_index",
          "primary": false,
          "unique": false
        },
        {
          "columnNames": [
            "username"
          ],
          "composite": false,
          "keyName": "virgin_username_index",
          "primary": false,
          "unique": false
        },
        {
          "columnNames": [
            "discriminator"
          ],
          "composite": false,
          "keyName": "virgin_discriminator_index",
          "primary": false,
          "unique": false
        },
        {
          "columnNames": [
            "cached_dur_in_vc"
          ],
          "composite": false,
          "keyName": "virgin_cached_dur_in_vc_index",
          "primary": false,
          "unique": false
        },
        {
          "keyName": "virgin_pkey",
          "columnNames": [
            "id",
            "guild_snowflake"
          ],
          "composite": true,
          "primary": true,
          "unique": true
        }
      ],
      "checks": [],
      "foreignKeys": {
        "virgin_guild_snowflake_foreign": {
          "constraintName": "virgin_guild_snowflake_foreign",
          "columnNames": [
            "guild_snowflake"
          ],
          "localTableName": "public.virgin",
          "referencedColumnNames": [
            "id"
          ],
          "referencedTableName": "public.guild",
          "updateRule": "cascade"
        },
        "virgin_intro_song_hash_foreign": {
          "constraintName": "virgin_intro_song_hash_foreign",
          "columnNames": [
            "intro_song_hash"
          ],
          "localTableName": "public.virgin",
          "referencedColumnNames": [
            "hash"
          ],
          "referencedTableName": "public.intro_song",
          "deleteRule": "set null",
          "updateRule": "cascade"
        }
      }
    },
    {
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "default": "uuid_generate_v4()",
          "mappedType": "uuid"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamptz(0)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "default": "now()",
          "mappedType": "datetime"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamptz(0)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "default": "now()",
          "mappedType": "datetime"
        },
        "virgin_snowflake": {
          "name": "virgin_snowflake",
          "type": "text",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "mappedType": "text"
        },
        "guild_snowflake": {
          "name": "guild_snowflake",
          "type": "text",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "mappedType": "text"
        },
        "connection_start": {
          "name": "connection_start",
          "type": "timestamptz(0)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "default": "now()",
          "comment": "The time the user entered VC",
          "mappedType": "datetime"
        },
        "connection_end": {
          "name": "connection_end",
          "type": "timestamptz(0)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 6,
          "comment": "The time the user left VC",
          "mappedType": "datetime"
        },
        "screen": {
          "name": "screen",
          "type": "boolean",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "default": "false",
          "comment": "Whether or not the user is sharing their screen",
          "mappedType": "boolean"
        },
        "camera": {
          "name": "camera",
          "type": "boolean",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "default": "false",
          "comment": "Whether or not the user is sharing their camera",
          "mappedType": "boolean"
        },
        "gaming": {
          "name": "gaming",
          "type": "boolean",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "default": "false",
          "comment": "Whether or not the user has a game open",
          "mappedType": "boolean"
        }
      },
      "name": "vc_event",
      "schema": "public",
      "indexes": [
        {
          "columnNames": [
            "created_at"
          ],
          "composite": false,
          "keyName": "vc_event_created_at_index",
          "primary": false,
          "unique": false
        },
        {
          "columnNames": [
            "updated_at"
          ],
          "composite": false,
          "keyName": "vc_event_updated_at_index",
          "primary": false,
          "unique": false
        },
        {
          "columnNames": [
            "connection_start"
          ],
          "composite": false,
          "keyName": "vc_event_connection_start_index",
          "primary": false,
          "unique": false
        },
        {
          "columnNames": [
            "connection_end"
          ],
          "composite": false,
          "keyName": "vc_event_connection_end_index",
          "primary": false,
          "unique": false
        },
        {
          "keyName": "vc_event_pkey",
          "columnNames": [
            "id"
          ],
          "composite": false,
          "primary": true,
          "unique": true
        }
      ],
      "checks": [],
      "foreignKeys": {
        "vc_event_virgin_snowflake_guild_snowflake_foreign": {
          "constraintName": "vc_event_virgin_snowflake_guild_snowflake_foreign",
          "columnNames": [
            "virgin_snowflake",
            "guild_snowflake"
          ],
          "localTableName": "public.vc_event",
          "referencedColumnNames": [
            "id",
            "guild_snowflake"
          ],
          "referencedTableName": "public.virgin",
          "updateRule": "cascade"
        },
        "vc_event_guild_snowflake_foreign": {
          "constraintName": "vc_event_guild_snowflake_foreign",
          "columnNames": [
            "guild_snowflake"
          ],
          "localTableName": "public.vc_event",
          "referencedColumnNames": [
            "id"
          ],
          "referencedTableName": "public.guild",
          "updateRule": "cascade"
        }
      }
    }
  ]
}
